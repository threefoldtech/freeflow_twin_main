server {
  root /usr/share/nginx/html;
  listen 80;
  listen [::]:80;

  index index.html;
  resolver 127.0.0.1 valid=30s;
  client_max_body_size 100M;

  location /socket.io/ {
    access_log off;
    proxy_http_version 1.1;
    proxy_buffering off;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_pass http://127.0.0.1:3000/socket.io/;
  }

  location /api/v1/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://127.0.0.1:3000/api/v1/;
  }

  location /api/v2/ {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header Host $http_host;
    proxy_pass http://127.0.0.1:3001/api/v2/;
  }

  location / {
    try_files $uri $uri/ @rewrites;
  }

  location @rewrites {
    rewrite ^(.+)$ /index.html last;
  }

  location ~* /api/.*\.(?:ico|css|js|gif|jpe?g|png)$ {
    proxy_pass http://127.0.0.1:3000$request_uri;
  }

  location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    # Some basic cache-control for static files to be sent to the browser
    expires max;
    add_header Pragma public;
    add_header Cache-Control "public, must-revalidate, proxy-revalidate";
  }

  location /getExternalResource {
    if ($arg_resource) {
      # add_header Content-disposition "attachment;";
      # return 200 $arg_resource;
      proxy_pass $arg_resource;
    }
    #if (!$arg_resource) {
    #  return 404 "resource was not defined";
    #}
  }
}
