  {
  # List of connection strings for outbound peer connections in URI format, e.g. tls://a.b.c.d:e 
  # or socks://a.b.c.d:e/f.g.h.i:j. These connections will obey the operating system routing 
  # table, therefore you should use this section when you may connect via different interfaces.
Peers: [
   'tcp://smithtacticalsolutions.com:9943',
           'tcp://108.242.38.186:9943',
           'tls://ipv4.campina-grande.paraiba.brazil.yggdrasil.iasylum.net:50000',
           'tls://192.99.145.61:58226',
           'tls://yyz.yuetau.net:6643',
           'tls://ca1.servers.devices.cwinfo.net:58226',
           'tls://65.21.57.122:61995',
           'tls://95.216.5.243:18836',
           'tls://fi1.servers.devices.cwinfo.net:61995',
           'tls://aurora.devices.waren.io:18836',
           'tls://ygg-fin.incognet.io:8884',
           'tls://152.228.216.112:23108',
           'tls://51.255.223.60:54232',
           'tls://cloudberry.fr1.servers.devices.cwinfo.net:54232',
           'tls://62.210.85.80:39575',
           'tls://fr2.servers.devices.cwinfo.net:23108',
           'tls://s2.i2pd.xyz:39575',
           'tls://p2p-node.de:1338?key=000000d80a2d7b3126ea65c8c08fc751088c491a5cdd47eff11c86fa1e4644ae',
           'tls://vpn.ltha.de:443?key=0000006149970f245e6cec43664bce203f2514b60a153e194f31e2b229a1339d',
           'tls://ygg.mkg20001.io:443',
           'tls://ygg1.mk16.de:1338?key=0000000087ee9949eeab56bd430ee8f324cad55abf3993ed9b9be63ce693e18a',
           'tls://ygg2.mk16.de:1338?key=00000002e71368e36f2fae8fe437e09f935dcf69ee08dc00afe02ad7eae2f5f7',
           'tls://01.ffm.deu.ygg.yt:443',
           'tls://01.blr.ind.ygg.yt:443',
           'tls://01.tky.jpn.ygg.yt:443',
           'tls://minecast.xyz:3785',
           'tls://01.mxc.mex.ygg.yt:443',
           'tls://94.103.82.150:8080',
           'tls://45.147.198.155:6010',
           'tls://ygg-nl.incognet.io:8884',
           'tls://ipv4.dronten.flevoland.netherlands.iasylum.net:50000',
           'tls://ipv6.dronten.flevoland.netherlands.iasylum.net:51000',
           'tls://aaoth.xyz:25565',
           'tls://ygg1.ezdomain.ru:11130',
           'tls://ygg2.ezdomain.ru:11130',
           'tls://ipv4.warsaw.poland.yggdrasil.iasylum.net:50000',
           'tls://54.37.137.221:11129',
           'tls://pl1.servers.devices.cwinfo.net:11129',
           'tls://185.165.169.234:8443',
           'tls://188.225.9.167:18227',
           'tls://yggno.de:18227',
           'tls://ygg.tomasgl.ru:61944?key=c5e0c28a600c2118e986196a0bbcbda4934d8e9278ceabea48838dc5d8fae576',
           'tls://ygg.loskiq.ru:17314',
           'tls://176.215.237.83:8443?sni=irk.peering.flying-squid.host&key=f69da2c11d5fe8bcee7d026a6ed28dc7873db9ecb88c797b29348546e411d934',
           'tls://yggpvs.duckdns.org:8443',
           'tls://ygg0.ezdomain.ru:11130',
           'tls://158.101.229.219:17001',
           'tls://sin.yuetau.net:6643',
           'tls://01.sgp.sgp.ygg.yt:443',
           'tls://01.sel.kor.ygg.yt:443',
           'tls://185.130.44.194:7040',
           'tls://ygg.ace.ctrl-c.liu.se:9999?key=5636b3af4738c3998284c4805d91209cab38921159c66a6f359f3f692af1c908',
           'tls://193.111.114.28:1443',
           'tls://91.224.254.114:18001',
           'tls://ygg-ukr.incognet.io:8884',
           'tls://51.38.64.12:28395',
           'tls://185.175.90.87:43006',
           'tls://uk1.servers.devices.cwinfo.net:28395',
           'tls://01.lon.gbr.ygg.yt:443',
           'tls://108.175.10.127:61216',
           'tls://longseason.1200bps.xyz:13122',
           'tls://supergay.network:9001',
           'tls://lancis.iscute.moe:49274',
           'tls://167.160.89.98:7040',
           'tls://ygg-ny-us.incognet.io:8884',
           'tls://44.234.134.124:443',
           'tls://ygg-tx-us.incognet.io:8884',
           'tls://bazari.sh:3725',
           'tls://lax.yuetau.net:6643',
           'tls://ygg-nv-us.incognet.io:8884',
           'tls://yggdrasil.sticloud.gq:13122',
           'tls://51.81.46.170:5222',
           'tls://01.scv.usa.ygg.yt:443',
           'tf-tcp://gent01.grid.tf:9943',
           'tf-tcp://gent02.grid.tf:9943',
           'tf-tcp://gent03.grid.tf:9943',
           'tf-tcp://gent04.grid.tf:9943',
           'tf-tcp://gent01.test.grid.tf:9943',
           'tf-tcp://gent02.test.grid.tf:9943',
           'tf-tcp://gent01.dev.grid.tf:9943',
           'tf-tcp://gent02.dev.grid.tf:9943',
           'tf-tcp://gw291.vienna1.greenedgecloud.com:9943',
           'tf-tcp://gw293.vienna1.greenedgecloud.com:9943',
           'tf-tcp://gw294.vienna1.greenedgecloud.com:9943',
           'tf-tcp://gw297.vienna1.greenedgecloud.com:9943',
           'tf-tcp://gw298.vienna1.greenedgecloud.com:9943',
           'tf-tcp://gw299.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw300.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw304.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw306.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw307.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw309.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw313.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw324.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw326.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw327.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw328.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw330.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw331.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw333.salzburg1.greenedgecloud.com:9943',
           'tf-tcp://gw422.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw423.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw424.vienna2.greenedgecloud.com:9943',
           'tf-tcp://gw425.vienna2.greenedgecloud.com:9943',

]

  # List of connection strings for outbound peer connections in URI format, arranged by source 
  # interface, e.g. { "eth0": [ tls://a.b.c.d:e ] }. Note that SOCKS peerings will NOT be 
  # affected by this option and should go in the "Peers" section instead.
  InterfacePeers: {}

  # Listen addresses for incoming connections. You will need to add listeners in order to accept 
  # incoming peerings from non-local nodes. Multicast peer discovery will work regardless of any 
  # listeners set here. Each listener should be specified in URI format as above, e.g. 
  # tls://0.0.0.0:0 or tls://[::]:0 to listen on all interfaces.
  Listen: []

  # Listen address for admin connections. Default is to listen for local connections either on 
  # TCP/9001 or a UNIX socket depending on your platform. Use this value for yggdrasilctl 
  # -endpoint=X. To disable the admin socket, use the value "none" instead.
  AdminListen: unix:///var/run/yggdrasil.sock

  # Configuration for which interfaces multicast peer discovery should be enabled on. Each entry 
  # in the list should be a json object which may contain Regex, Beacon, Listen, and Port. Regex 
  # is a regular expression which is matched against an interface name, and interfaces use the 
  # first configuration that they match gainst. Beacon configures whether or not the node should 
  # send link-local multicast beacons to advertise their presence, while listening for incoming 
  # connections on Port. Listen controls whether or not the node listens for multicast beacons 
  # and opens outgoing connections.
  MulticastInterfaces: [ {
      Regex: .* Beacon: true Listen: true Port: 0
    }
  ]

  # List of peer public keys to allow incoming peering connections from. If left empty/undefined 
  # then all connections will be allowed by default. This does not affect outgoing peerings, nor 
  # does it affect link-local peers discovered via multicast.
  AllowedPublicKeys: []

  # Your public key. Your peers may ask you for this to put into their AllowedPublicKeys 
  # configuration.
  PublicKey: acdb433d1683852d5c6f5a3d9f88e48af3aed687531129a6116cfc5aac379348

  # Your private key. DO NOT share this with anyone!
  PrivateKey: 
  9ee8ec1c9c7a6bca8668ce3437846bdf54529ee81df0f6cf1393ecbc8a3f3557acdb433d1683852d5c6f5a3d9f88e48af3aed687531129a6116cfc5aac379348

  # Local network interface name for TUN adapter, or "auto" to select an interface 
  # automatically, or "none" to run without TUN.
  IfName: auto

  # Maximum Transmission Unit (MTU) size for your local TUN interface. Default is the largest 
  # supported size for your platform. The lowest possible value is 1280.
  IfMTU: 65535

  # By default, nodeinfo contains some defaults including the platform, architecture and 
  # Yggdrasil version. These can help when surveying the network and diagnosing network routing 
  # problems. Enabling nodeinfo privacy prevents this, so that only items specified in 
  # "NodeInfo" are sent back if specified.
  NodeInfoPrivacy: false

  # Optional node info. This must be a { "key": "value", ... } map or set as null. This is 
  # entirely optional but, if set, is visible to the whole network on request.
  NodeInfo: {}
}

