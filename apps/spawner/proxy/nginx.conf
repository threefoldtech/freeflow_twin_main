events {
    worker_connections 1024;
}

http {
    error_log /etc/nginx/error_log.log warn;
    client_max_body_size 10000M;

    resolver 127.0.0.11 ipv6=off;

    proxy_cache_path /etc/nginx/cache keys_zone=one:500m max_size=1000m;

    upstream onlyoffice-documentserver {
        server onlyoffice-documentserver:80;
    }

    upstream digital_twin_spawner {
        server digital_twin_spawner:9000;
    }

    upstream digital_twin_frontend {
        server digital_twin_frontend:80;
    }

    server {
        listen 80 default_server;
        server_name _;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
            listen 443 ssl http2;

            ssl_certificate /etc/nginx/certs/digitaltwinjimbertestingbe.pem;
            ssl_certificate_key /etc/nginx/certs/digitaltwinjimbertestingbe.key;

            server_name ~^documentserver.digitaltwin.jimbertesting.be$;

            error_page 502 /502.html;
            # @todo: make this anything other than 502.
            # Context: this is intended to handle when a digitaltwin container is not yet online
            location /502.html {
                 return 302 $scheme://digitaltwin.jimbertesting.be/;
            }

            location / {
                proxy_pass http://onlyoffice-documentserver;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection upgrade;
                proxy_set_header Accept-Encoding gzip;
                proxy_pass_request_headers on;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_http_version 1.1;
            }
    }

    server {
        listen 443 ssl http2;

        ssl_certificate /etc/nginx/certs/digitaltwinjimbertestingbe.pem;
        ssl_certificate_key /etc/nginx/certs/digitaltwinjimbertestingbe.key;

        server_name ~^(?<name>.+).digitaltwin.jimbertesting.be$;

        error_page 502 /502.html;
        # @todo: make this anything other than 502.
        # Context: this is intended to handle when a digitaltwin container is not yet online
        location /502.html {
             return 302 $scheme://digitaltwin.jimbertesting.be?username=$name;
        }

#         error_page 404 /404.html;
#         location /404.html {
#              return 302 $scheme://digitaltwin.jimbertesting.be?username=$name;
#         }


        location / {
            set $upstream "$name-chat";
            proxy_pass http://$upstream;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_http_version 1.1;
        }
    }

    server {
        listen 443 ssl http2;

        ssl_certificate /etc/nginx/certs/jimbertestingbe.pem;
        ssl_certificate_key /etc/nginx/certs/jimbertestingbe.key;

        server_name ~^digitaltwin.jimbertesting.be$;
        location / {
            proxy_pass http://digital_twin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
            proxy_pass_request_headers on;
            proxy_http_version 1.1;

        }
        # location /api/v1 {
        #     proxy_pass http://digitaltwin-spawner;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header Connection upgrade;
        #     proxy_set_header Accept-Encoding gzip;
        #     proxy_pass_request_headers on;
        #     proxy_http_version 1.1;
        # }
    }



    #### TEST SERVICE ###
    server {
            listen 443 ssl http2;

            ssl_certificate /etc/nginx/certs/digitaltwintestjimbertestingbe.pem;
            ssl_certificate_key /etc/nginx/certs/digitaltwintestjimbertestingbe.key;

            server_name ~^documentserver.digitaltwin-test.jimbertesting.be$;

            error_page 502 /502.html;
            # @todo: make this anything other than 502.
            # Context: this is intended to handle when a digitaltwin container is not yet online
            location /502.html {
                 return 302 $scheme://digitaltwin-test.jimbertesting.be/;
            }

            location / {
                proxy_pass http://onlyoffice-documentserver;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection upgrade;
                proxy_set_header Accept-Encoding gzip;
                proxy_pass_request_headers on;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
                proxy_http_version 1.1;
            }
    }

    server {
        listen 443 ssl http2;

        ssl_certificate /etc/nginx/certs/digitaltwintestjimbertestingbe.pem;
        ssl_certificate_key /etc/nginx/certs/digitaltwintestjimbertestingbe.key;

        server_name ~^(?<name>.+).digitaltwin-test.jimbertesting.be$;

        error_page 502 /502.html;
        # @todo: make this anything other than 502.
        # Context: this is intended to handle when a digitaltwin container is not yet online
        location /502.html {
            return 302 $scheme://digitaltwin-test.jimbertesting.be/;
        }


        location / {
            set $upstream "$name-chat";
            proxy_pass http://$upstream;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_http_version 1.1;
        }
    }
    server {
        listen 443 ssl http2;

        ssl_certificate /etc/nginx/certs/jimbertestingbe.pem;
        ssl_certificate_key /etc/nginx/certs/jimbertestingbe.key;

        server_name ~^digitaltwin-test.jimbertesting.be$;
        location / {
            proxy_pass http://digital_twin_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection upgrade;
            proxy_set_header Accept-Encoding gzip;
            proxy_pass_request_headers on;
            proxy_http_version 1.1;

        }
        # location /api/v1 {
        #     proxy_pass http://digitaltwin-spawner;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     proxy_set_header Connection upgrade;
        #     proxy_set_header Accept-Encoding gzip;
        #     proxy_pass_request_headers on;
        #     proxy_http_version 1.1;
        # }
    }
}
